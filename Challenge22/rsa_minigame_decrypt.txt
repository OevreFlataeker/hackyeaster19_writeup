#!/usr/bin/env python
import gmpy
from Crypto.Util.number import *
# usual suspect e=2**16+1
e=65537
# was given
N=10603199174122839808738169357706062732533966731323858892743816728206914395320609331466257631096646511986506501272036007668358071304364156150345138983648630874220488837685118753574424686204595981514561343227316297317899
# p,q were factored by daubsi's mathematica with the other two N's
p=1173821128899717744763168991586024137475923012574062580049287532012184965219319828285650431646942194944437493
q=9033062119150775356115605417902072538098631081058159551678022048966520848600866260935959311606867286026034943
# ciphertext fitting to N from riddle
c=883895515518702990157008398945175622369348177479273727666188822384515278346091231223228633562286443126634960286337962216299566852261275189679618639468100617409385486757117996512128227299052476236805574920658456448123
d = gmpy.invert(e, (p-1)*(q-1))
print("d="+str(d))
# line below copied from URL https://medium.com/bugbountywriteup/tokyowesterns-ctf-4th-2018-writeup-part-4-f64e1583b315
#m = pow(c, gmpy.invert(e, ((N / q) - 1) * (q - 1)), N)
m = pow(c, d, N)
print("m="+str(m))
print(long_to_bytes(m))